{"version":3,"sources":["utils/oper.ts"],"names":["someOper","oper1","oper2","convertOper","decor","def","Operation_1","Operation","default","oper","require","exports"],"mappings":"YAYA,SAAAA,UAAyBC,EAAkBC,GACvC,OAAQD,EAAQC,GAAS,EAW7B,QAAAC,aAA4BC,EAAuBC,GAe/C,MAf+C,UAAAA,IAAAA,EAAMC,YAAAC,UAAUC,SAC/DJ,EAAQA,MAaRA,EAAMK,KAAOL,EAAMK,MAAQJ,EACpBD,wDAtCX,IAAAE,aAAAI,QAAA,eAWAC,SAAAX,SAAAA,SAYAW,QAAAR,YAAAA","file":"../../utils/oper.js","sourcesContent":["import { ITaskDecorator } from '../ITaskDecorator';\r\nimport { Operation } from '../Operation';\r\n\r\n\r\n/**\r\n * has some oper samed.\r\n *\r\n * @export\r\n * @param {Operation} oper1\r\n * @param {Operation} oper2\r\n * @returns\r\n */\r\nexport function someOper(oper1: Operation, oper2: Operation) {\r\n    return (oper1 & oper2) > 0;\r\n}\r\n\r\n/**\r\n * convert old version Operation to new version Operation\r\n *\r\n * @export\r\n * @param {ITaskDecorator} decor\r\n * @param {any} [def=Operation.default]\r\n * @returns\r\n */\r\nexport function convertOper(decor: ITaskDecorator, def = Operation.default) {\r\n    decor = decor || {};\r\n    // // todo  compatibility\r\n    // if (decor['watch']) {\r\n    //     decor.oper = (decor.oper || def) | Operation.watch;\r\n    // }\r\n    // if (decor['e2e']) {\r\n    //     decor.oper = (decor.oper || def) | Operation.e2e;\r\n    // }\r\n    // if (decor['test']) {\r\n    //     decor.oper = (decor.oper || def) | Operation.test;\r\n    // }\r\n    // // ----\r\n\r\n    decor.oper = decor.oper || def;\r\n    return decor;\r\n}\r\n"]}