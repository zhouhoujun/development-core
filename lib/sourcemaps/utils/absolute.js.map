{"version":3,"sources":["utils/absolute.ts"],"names":["absolutePath","root","pathstr","path","isAbsolute","join","absoluteSrc","src","_","isString","prefixSrc","map","p","strSrc","prefix","test","substring","length","require","exports"],"mappings":"YAYA,SAAAA,cAA6BC,EAAcC,GACvC,OAAKD,GAAQE,KAAKC,WAAWF,GAClBA,EAEJC,KAAKE,KAAKJ,EAAMC,GAW3B,QAAAI,aAA4BL,EAAcM,GACtC,MAAIC,GAAEC,SAASF,GACJG,UAAUT,EAAMM,GAEhBC,EAAEG,IAAIJ,EAAK,SAAAK,GAAK,MAAAF,WAAUT,EAAMW,KAI/C,QAAAF,WAAmBT,EAAcY,GAC7B,GAAIC,GAAS,EAKb,OAJI,KAAKC,KAAKF,KACVC,EAAS,IACTD,EAASA,EAAOG,UAAU,EAAGH,EAAOI,SAEjCH,EAASd,aAAaC,EAAMY,yDAzCvC,IAAAV,MAAAe,QAAA,QACAV,EAAAU,QAAA,SAWAC,SAAAnB,aAAAA,aAeAmB,QAAAb,YAAAA","file":"../../utils/absolute.js","sourcesContent":["import * as path from 'path';\r\nimport * as _ from 'lodash';\r\nimport { Src } from '../types';\r\n\r\n/**\r\n * convert path to absolute path.\r\n *\r\n * @export\r\n * @param {string} root\r\n * @param {string} pathstr\r\n * @returns {string}\r\n */\r\nexport function absolutePath(root: string, pathstr: string): string {\r\n    if (!root || path.isAbsolute(pathstr)) {\r\n        return pathstr;\r\n    }\r\n    return path.join(root, pathstr);\r\n}\r\n\r\n/**\r\n * convert src to absolute path src.\r\n *\r\n * @export\r\n * @param {string} root\r\n * @param {Src} src\r\n * @returns {Src}\r\n */\r\nexport function absoluteSrc(root: string, src: Src): Src {\r\n    if (_.isString(src)) {\r\n        return prefixSrc(root, src);\r\n    } else {\r\n        return _.map(src, p => prefixSrc(root, p));\r\n    }\r\n}\r\n\r\nfunction prefixSrc(root: string, strSrc: string): string {\r\n    let prefix = '';\r\n    if (/^!/.test(strSrc)) {\r\n        prefix = '!';\r\n        strSrc = strSrc.substring(1, strSrc.length);\r\n    }\r\n    return prefix + absolutePath(root, strSrc);\r\n}\r\n"]}