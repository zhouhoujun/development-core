"use strict";function generateTask(t,e,r){var n=[];return _.each(_.isArray(t)?t:[t],function(t){t.watchTasks&&(t.oper=(t.oper||TaskConfig_1.Operation.default)|TaskConfig_1.Operation.watch),utils_1.matchCompare(t,e,r)&&(!t.watch||t.oper&TaskConfig_1.Operation.watch||(t.oper=t.oper|TaskConfig_1.Operation.autoWatch),n.push(createTask(t)))}),n}function createTask(t){var e;return e=t.oper&TaskConfig_1.Operation.watch?createWatchTask(t):_.isFunction(t.task)?createCustomTask(t):createPipesTask(t)}function createCustomTask(t){var e=function(e,r,n){var a=e.subTaskName(r);return console.log("register custom dynamic task:",chalk.cyan(a)),n.task(a,function(){return t.task(e,t,n)}),a};return new DynamicTask({name:t.name,order:t.order,oper:t.oper,group:t.group,assert:t},e)}function createWatchTask(t){var e=function(e,r,n){var a,o=_.isFunction(t.watchTasks)?t.watchTasks(e,t):t.watchTasks;a=_.isFunction(_.last(o))?o.pop():function(r){t.watchChanged&&t.watchChanged(r,e)},o=_.map(o,function(t){return _.isString(t)?e.subTaskName(t):t});var s=e.subTaskName(r);return console.log("register watch  dynamic task:",chalk.cyan(s)),n.task(s,function(){var t=e.getSrc(r);console.log("watch, src:",chalk.cyan.call(chalk,t)),watch(t,function(){taskSequence_1.runSequence(n,o).then(function(){a&&a()})})}),s};return new DynamicTask({name:t.name,order:t.order,oper:t.oper,group:t.group,assert:t},e)}function createPipesTask(t){return new DynamicPipeTask(t)}var __extends=this&&this.__extends||function(){var t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r])};return function(e,r){function n(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(n.prototype=r.prototype,new n)}}();Object.defineProperty(exports,"__esModule",{value:!0});var _=require("lodash"),coregulp=require("gulp"),chalk=require("chalk"),TaskConfig_1=require("./TaskConfig"),utils_1=require("./utils"),PipeTask_1=require("./PipeTask"),taskSequence_1=require("./taskSequence"),watch=require("gulp-watch"),DynamicTask=function(){function t(t,e){this.info=t,this.factory=e}return t.prototype.getInfo=function(){return this.info},t.prototype.setup=function(t,e){var r=this.factory(t,this.getInfo(),e||coregulp);return r&&(this.info.taskName=r),r},t}(),DynamicPipeTask=function(t){function e(e,r){var n=t.call(this,r||e)||this;return n.dt=e,n.info.assert=e,n}return __extends(e,t),e.prototype.getOption=function(t){return this.name=this.name||t.toStr(this.dt.name),this.dt||t.option},e.prototype.customPipe=function(e,r,n,a){var o=this;return this.dt.pipe?Promise.resolve(t.prototype.customPipe.call(this,e,r,n,a)).then(function(t){return o.cpipe2Promise(t,o.dt,r,n,a)}):t.prototype.customPipe.call(this,e,r,n,a)},e.prototype.pipes=function(e,r,n){var a=_.isFunction(this.dt.pipes)?this.dt.pipes(e,r,n):this.dt.pipes;return a=a||[],a.concat(t.prototype.pipes.call(this,e,r,n))},e.prototype.output=function(e,r,n){if(null===this.dt.output)return[function(t){return t}];var a=_.isFunction(this.dt.output)?this.dt.output(e,r,n):this.dt.output;return a=a||[],a.concat(t.prototype.output.call(this,e,r,n))},e}(PipeTask_1.PipeTask);exports.generateTask=generateTask,exports.createTask=createTask;
//# sourceMappingURL=sourcemaps/generateTask.js.map
