"use strict";function task(n){if(_.isFunction(n))return n.__task={},n;var e=function(){var e=n;return{v:function(n){return n.__task=e||{},n}}}();return"object"===("undefined"==typeof e?"undefined":_typeof(e))?e.v:void 0}function dynamicTask(n){if(n&&_.isFunction(n))return n.__dynamictask={},n;var e=function(){var e=n;return{v:function(n){return n.__dynamictask=e||{},n}}}();return"object"===("undefined"==typeof e?"undefined":_typeof(e))?e.v:void 0}function findTasks(n,e){var t=[];if(!n)return t;if(_.isFunction(n)){if(n.__task){var i=n.__task;if(i=_.isBoolean(i)?{}:i,!utils_1.matchTaskInfo(i,e))return t;if(!utils_1.matchTaskGroup(i,e))return t;var r=new n(i);r.setInfo&&r.setInfo(i),t.push(r)}else if(n.__dynamictask){var s=function(){var i=n.__dynamictask;if(!utils_1.matchTaskInfo(i,e))return{v:t};if(!utils_1.matchTaskGroup(i,e))return{v:t};var r=_.map((new n).tasks(),function(n){return n=_.extend(_.clone(i),n)});t=t.concat(generateTask_1.generateTask(r,e))}();if("object"===("undefined"==typeof s?"undefined":_typeof(s)))return s.v}}else _.isArray(n)?_.each(n,function(n){t.concat(findTasks(n,e))}):_.each(_.keys(n),function(i){i&&n[i]&&!/^[0-9]+$/.test(i)&&(console.log(chalk.grey("find task from :"),chalk.cyan(i)),t=t.concat(findTasks(n[i],e)))});return t}function taskdefine(n){if(_.isFunction(n))return n.__task_context=!0,n;var e=function(){var e=n;return{v:function(n){return n.__task_context=e||!0,n}}}();return"object"===("undefined"==typeof e?"undefined":_typeof(e))?e.v:void 0}function findTaskDefines(n){var e=[];if(!n)return e;if(_.isFunction(n)){if(n.__task_context){var t=new n;t.getContext||(t=taskDefine2Context(t)),e.push(t)}}else _.isArray(n)?_.each(n,function(n){e.concat(findTaskDefines(n))}):_.each(_.keys(n),function(t){t&&n[t]&&!/^[0-9]+$/.test(t)&&(console.log(chalk.grey("find task define from :"),chalk.cyan(t)),e=e.concat(findTaskDefines(n[t])))});return e}function findTaskDefine(n){var e=void 0;if(!n)return null;if(_.isFunction(n)){if(n.__task_context){var t=new n;e=t.getContext?t:taskDefine2Context(t)}}else _.isArray(n)?_.each(n,function(n){return!e&&(e=findTaskDefine(n),!0)}):_.each(_.keys(n),function(t){return!e&&(!(t&&n[t]&&!/^[0-9]+$/.test(t))||(console.log(chalk.grey("find task define from :"),chalk.cyan(t)),e=findTaskDefine(n[t]),!0))});return e}function findTaskDefineInModule(n){var e=void 0;try{e=findTaskDefine(_.isString(n)?require(n):n)}catch(n){return Promise.reject(n)}return e?Promise.resolve(e):(console.log(chalk.yellow("can not found task define in module.")),Promise.resolve(null))}function findTasksInModule(n,e){var t=void 0;try{t=_.isString(n)?findTasks(require(n),e):findTasks(n,e)}catch(n){return Promise.reject(n)}return Promise.resolve(t)}function findTaskDefineInDir(n){return Promise.race(_.map(_.isArray(n)?n:[n],function(n){return new Promise(function(e,t){if(fs_1.existsSync(n)){var i=requireDir(n);if(i){var r=findTaskDefine(i);r&&e(r)}}})}))}function findTasksInDir(n,e){return Promise.all(_.map(_.isArray(n)?n:[n],function(n){console.log(chalk.grey("begin load task from dir"),chalk.cyan(n));try{var t=requireDir(n,{recurse:!0});return Promise.resolve(findTasks(t,e))}catch(n){return Promise.reject(n)}})).then(function(n){return _.flatten(n)})}function taskDefine2Context(n){var e=_.extend({},n);return e.getContext=function(e){return bindingConfig_1.bindingConfig(n.loadConfig(e.option,e.env))},e.tasks=n.loadTasks?function(e){return n.loadTasks(e)}:null,e}var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n};require("reflect-metadata");var _=require("lodash"),chalk=require("chalk"),generateTask_1=require("./generateTask"),bindingConfig_1=require("./bindingConfig"),utils_1=require("./utils"),fs_1=require("fs"),requireDir=require("require-dir");exports.task=task,exports.dynamicTask=dynamicTask,exports.findTasks=findTasks,exports.taskdefine=taskdefine,exports.findTaskDefines=findTaskDefines,exports.findTaskDefine=findTaskDefine,exports.findTaskDefineInModule=findTaskDefineInModule,exports.findTasksInModule=findTasksInModule,exports.findTaskDefineInDir=findTaskDefineInDir,exports.findTasksInDir=findTasksInDir,exports.taskDefine2Context=taskDefine2Context;
//# sourceMappingURL=sourcemaps/decorator.js.map
